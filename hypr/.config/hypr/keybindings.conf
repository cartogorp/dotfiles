## █▄▀ █▀▀ █▄█ █▄▄ █ █▄░█ █▀▄ █ █▄░█ █▀▀ █▀
## █░█ ██▄ ░█░ █▄█ █ █░▀█ █▄▀ █ █░▀█ █▄█ ▄█

# see https://wiki.hyprland.org/configuring/keywords/ for more
# example binds, see https://wiki.hyprland.org/configuring/binds/ for more

# Grouping of binds for easier management
#  $d=[Group Name|Subgroup Name1|Subgroup Name2|...]
# '$d' is a variable that is used to group binds together (or use another variable)
# This is only for organization purposes and is not a defined hyprland variable
# What we did here is to modify the Description of the binds to include the group name
# The $d will be parsed as a separate key to be use for a GUI or something pretty
# [Main|Subgroup1|Subgroup2|...]
# Main - The main groupname
# Subgroup1.. - The subgroup names can be use to avoid repeating the same description


#*  Variables 
# Default if commented out
# $mainMod = Super # super / meta / windows key
# Assign apps
# $TERMINAL = kitty
# $EDITOR = code
# $EXPLORER = dolphin
# $BROWSER = firefox

$wm=Window Management
$d=[$wm]


bind = $mainMod, Q, exec, $scrPath/dontkillsteam.sh
bind = Alt, F4, exec, $scrPath/dontkillsteam.sh
bind = $mainMod, Delete, exit
bind = $mainMod, W, exec, hyprctl --batch "dispatch togglefloating; dispatch resizeactive exact 95% 95%; dispatch centerwindow"
bind = $mainMod, G, togglegroup
bind = Shift, F11, fullscreen
bind = $mainMod, L, exec, hyprlock
bind = $mainMod Shift, F, exec, $scrPath/windowpin.sh
bind = Control Alt, Delete, exec, $scrPath/logoutlaunch.sh
bind = Alt_R, Control_R, exec, killall waybar || (env reload_flag=1 $scrPath/wbarconfgen.sh)
# bindd = ALT_R, Control_R,toggle waybar, exec, killall waybar || waybar # toggle waybar without reloading, this is faster

# Split layout binds
bind = $mainMod, H, layoutmsg, orientationleft
bind = $mainMod, V, layoutmsg, orientationtop

$d=[$wm|Group Navigation]
bind = $mainMod Control, H, changegroupactive, b
bind = $mainMod Control, L, changegroupactive, f

$d=[$wm|Change focus]
bind = $mainMod, Left, movefocus, l
bind = $mainMod, Right, movefocus, r
bind = $mainMod, Up, movefocus, u
bind = $mainMod, Down, movefocus, d
bind = ALT, Tab, cyclenext

$d=[$wm|Resize Active Window]
# Resize windows
binde = $mainMod Shift, Right, resizeactive, 30 0
binde = $mainMod Shift, Left, resizeactive, -30 0
binde = $mainMod Shift, Up, resizeactive, 0 -30
binde = $mainMod Shift, Down, resizeactive, 0 30

# Move active window around current workspace with mainMod + Shift + Control [←→↑↓]
$d=[$wm|Move active window across workspace]
$moveactivewindow=grep -q "true" <<< $(hyprctl activewindow -j | jq -r .floating) && hyprctl dispatch moveactive
binde = $mainMod Shift Control, left, exec, $moveactivewindow -30 0 || hyprctl dispatch movewindow l
binde = $mainMod Shift Control, right, exec, $moveactivewindow 30 0 || hyprctl dispatch movewindow r
binde = $mainMod Shift Control, up, exec, $moveactivewindow  0 -30 || hyprctl dispatch movewindow u
binde = $mainMod Shift Control, down, exec, $moveactivewindow 0 30 || hyprctl dispatch movewindow d

# Move/Resize focused window
$d=[$wm|Move & Resize with mouse]
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow
bindm = $mainMod, Z, movewindow
bindm = $mainMod, X, resizewindow

# Toggle focused window split
$d=[$wm]
bind = $mainMod, J, togglesplit

# ────────────── Window Split Behavior ──────────────
# `togglesplit` toggles the tiling orientation (horizontal ↔ vertical).
# In newer Hyprland versions, it works even without window groups.
# This makes it useful as a general-purpose layout toggle.

# `layoutmsg orientationleft` and `layoutmsg orientationtop` explicitly set
# the direction for the **next** opened window, but do not affect existing ones.

# Use one or both depending on your workflow:
# - `togglesplit` = quick toggle between split directions
# - `layoutmsg`  = precise, explicit layout control

$l=Launcher
$d=[$l|Apps]
bind = $mainMod, RETURN, exec, $TERMINAL
bind = $mainMod, F, exec, $EXPLORER
bind = $mainMod, N, exec, $EDITOR
bind = $mainMod, O, exec, $BROWSER
bind = Control Shift, Escape, exec, $scrPath/sysmonlaunch.sh

$d=[$l|Wofi menus]
bind = $mainMod, SPACE, exec, wofi --show drun
bind = $mainMod Shift, V, exec, cliphist list | wofi --dmenu | cliphist decode | wl-copy
bind = $mainMod Shift, E, exec, wofi --show filebrowser


$hc=Hardware Controls
$d=[$hc|Audio]
bind = , F10, exec, $scrPath/volumecontrol.sh -o m # toggle audio mute
bind = , XF86AudioMute, exec, $scrPath/volumecontrol.sh -o m # toggle audio mute
binde = , F11, exec, $scrPath/volumecontrol.sh -o d # decrease volume
binde = , F12, exec, $scrPath/volumecontrol.sh -o i # increase volume
bind = , XF86AudioMicMute, exec, $scrPath/volumecontrol.sh -i m # toggle microphone mute
binde = , XF86AudioLowerVolume, exec, $scrPath/volumecontrol.sh -o d # decrease volume
binde = , XF86AudioRaiseVolume, exec, $scrPath/volumecontrol.sh -o i # increase volume

$d=[$hc|Media]
bind = , XF86AudioPlay, exec, playerctl play-pause # toggle between media play and pause
bind = , XF86AudioPause, exec, playerctl play-pause # toggle between media play and pause
bind = , XF86AudioNext, exec, playerctl next # media next
bind = , XF86AudioPrev, exec, playerctl previous # media previous

$d=[$hc|Brightness]
binde = , XF86MonBrightnessUp, exec, $scrPath/brightnesscontrol.sh i # increase brightness
binde = , XF86MonBrightnessDown, exec, $scrPath/brightnesscontrol.sh d # decrease brightness


$ut=Utilities
$d=[$ut]
bind = $mainMod, K, exec, $scrPath/keyboardswitch.sh # switch keyboard layout
bind = $mainMod Alt, G, exec, $scrPath/gamemode.sh # disable hypr effects for gamemode
bind = $mainMod Shift, G, exec, $scrPath/gamelauncher.sh # run game launcher for steam and lutris

$d=[$ut|Screen Capture]
bind = $mainMod Shift, P, exec, hyprpicker -an # Pick color (Hex) >> clipboard#
bind = $mainMod, P, exec, $scrPath/screenshot.sh s # partial screenshot capture
bind = $mainMod Control, P, exec, $scrPath/screenshot.sh sf # partial screenshot capture (frozen screen)
bind = $mainMod Alt, P, exec, $scrPath/screenshot.sh m # monitor screenshot capture
bind = , Print, exec, $scrPath/screenshot.sh p # all monitors screenshot capture

# TODO Make a main rofi menu for these selectors
$rice=Theming and Wallpaper
$d=[$rice]
bind = $mainMod Alt, Right, exec, $scrPath/wallpaper.sh -Gn # next global wallpaper
bind = $mainMod Alt, Left, exec, $scrPath/wallpaper.sh -Gp # previous global wallpaper
bind = $mainMod Shift, W, exec, $scrPath/wallpaper.sh -SG # launch wallpaper select menu
bind = $mainMod ALT, W, exec, ~/.config/hypr/scripts/wallpaper-picker.sh # simple wallpaper picker
bind = $mainMod Alt, Up, exec, $scrPath/wbarconfgen.sh n # next waybar mode
bind = $mainMod Alt, Down, exec, $scrPath/wbarconfgen.sh p # previous waybar mode
bind = $mainMod Shift, R, exec, $scrPath/wallbashtoggle.sh -m # launch wallbash mode select menu
bind = $mainMod Shift, T, exec, $scrPath/themeselect.sh # launch theme select menu



$ws=Workspaces
$d=[$ws|Navigation]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

$d=[$ws|Navigation|Relative workspace]
bind = $mainMod Control, Right, workspace, r+1
bind = $mainMod Control, Left, workspace, r-1

$d=[$ws|Navigation]
bind = $mainMod Control, Down, workspace, empty

# Move focused window to a workspace
$d=[$ws|Move window to workspace]
bind = $mainMod Shift, 1, movetoworkspace, 1
bind = $mainMod Shift, 2, movetoworkspace, 2
bind = $mainMod Shift, 3, movetoworkspace, 3
bind = $mainMod Shift, 4, movetoworkspace, 4
bind = $mainMod Shift, 5, movetoworkspace, 5
bind = $mainMod Shift, 6, movetoworkspace, 6
bind = $mainMod Shift, 7, movetoworkspace, 7
bind = $mainMod Shift, 8, movetoworkspace, 8
bind = $mainMod Shift, 9, movetoworkspace, 9
bind = $mainMod Shift, 0, movetoworkspace, 10

# Move focused window to a relative workspace
$d=[$ws]
bind = $mainMod Control+Alt, Right, movetoworkspace, r+1
bind = $mainMod Control+Alt, Left, movetoworkspace, r-1


# Scroll through existing workspaces
$d=[$ws|Navigation]
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1


# Move/Switch to special workspace (scratchpad)
$d=[$ws|Navigation|Special workspace]
bind = $mainMod Shift, S, movetoworkspace, special
bind = $mainMod Alt, S, movetoworkspacesilent, special
bind = $mainMod, S, togglespecialworkspace

# Move focused window to a workspace silently
$d=[$ws|Navigation|Move window silently]
bind = $mainMod Alt, 1, movetoworkspacesilent, 1
bind = $mainMod Alt, 2, movetoworkspacesilent, 2
bind = $mainMod Alt, 3, movetoworkspacesilent, 3
bind = $mainMod Alt, 4, movetoworkspacesilent, 4
bind = $mainMod Alt, 5, movetoworkspacesilent, 5
bind = $mainMod Alt, 6, movetoworkspacesilent, 6
bind = $mainMod Alt, 7, movetoworkspacesilent, 7
bind = $mainMod Alt, 8, movetoworkspacesilent, 8
bind = $mainMod Alt, 9, movetoworkspacesilent, 9
bind = $mainMod Alt, 0, movetoworkspacesilent, 10



$d=#! unset the group name
